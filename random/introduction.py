# 计算机生成的随机数其实不是真正的随机，而是“伪随机”（看起来随机）。我们可以控制它，这既是优点也是缺点。

# 想象一下，你的程序里有个bug，这个bug只有在生成一串特定的随机数时才会出现。如果每次运行程序，随机数都变，那你可能永远也无法重现这个bug，也就没法修复它！
# 但是，如果我们能“固定”住这串随机数，让它每次都一样，我们就能稳定地复现问题，然后进行调试。

# 种子 (Seed):
#   相同的种子 → 相同的随机数序列。  
#   不同的种子 → 不同的随机数序列。
  
# 为了真正的“随机效果”（需要不可复现）：
# 我们不手动设置种子。在这种情况下，Python会自动为我们选择一个种子。它通常使用当前系统时间（比如从1970年1月1日到现在的秒数，也叫Epoch Time）作为种子。因为每次运行程序的时间都不同，所以种子就不同，生成的随机数序列也就不同了。
import random

# 不设置种子，让Python自动处理
print("运行:")
for _ in range(3):
    print(random.randint(1, 100))